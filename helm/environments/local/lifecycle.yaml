# Copyright 2025 GoodRx, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

global:
  image:
    repository: lifecycle-app
    tag: dev
    pullPolicy: Never
  imagePullSecrets: []
  serviceAccount:
    create: true
    name: 'runtime-sa'
  podSecurityContext:
    fsGroup: 2000
  securityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
  env:
    # Add any global env vars here if needed
    - name: PORT
      value: '80'
  envFrom:
    - secretRef:
        name: app-secrets

components:
  web:
    enabled: true
    fullnameOverride: 'lifecycle-web'
    service:
      enabled: true
      type: ClusterIP
      port: 80
      targetPort: 80
    ingress:
      enabled: false
    deployment:
      replicaCount: 1
      extraEnv:
        - name: JOB_VERSION
          value: default
        - name: ENVIRONMENT
          value: dev
        - name: APP_ENV
          value: dev
        - name: STAGE
          value: stage
        - name: PINO_PRETTY
          value: 'false'
        - name: LOG_LEVEL
          value: debug
        - name: NODE_ENV
          value: development
        - name: LIFECYCLE_MODE
          value: web
        - name: PORT
          value: '80'
      ports:
        - name: http
          containerPort: 80
          protocol: TCP
      livenessProbe:
        httpGet:
          path: /api/health
          port: 80
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 6
      readinessProbe:
        httpGet:
          path: /api/health
          port: 80
        periodSeconds: 5
        failureThreshold: 3

  worker:
    enabled: true
    fullnameOverride: 'lifecycle-worker'
    service:
      enabled: false
    ingress:
      enabled: false
    deployment:
      replicaCount: 1
      extraEnv:
        - name: JOB_VERSION
          value: default
        - name: ENVIRONMENT
          value: dev
        - name: STAGE
          value: dev
        - name: PINO_PRETTY
          value: 'false'
        - name: LOG_LEVEL
          value: debug
        - name: NODE_ENV
          value: development
        - name: APP_ENV
          value: dev
        - name: AWS_REGION
          value: 'us-west-2'
        - name: AWS_PROFILE
          value: REPLACE_ME_WITH_AWS_PROFILE
        - name: LIFECYCLE_MODE
          value: job
        - name: PORT
          value: '80'
        - name: MAX_GITHUB_API_REQUEST
          value: '250'
        - name: GITHUB_API_REQUEST_INTERVAL
          value: '10000'
        - name: LIFECYCLE_UI_HOSTHAME_WITH_SCHEME
          value: 'http://localhost:8000'
      ports:
        - name: http
          containerPort: 80
          protocol: TCP
      livenessProbe:
        httpGet:
          path: /api/health
          port: 80
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 12
        timeoutSeconds: 10
      readinessProbe:
        httpGet:
          path: /api/jobs
          port: 80
        periodSeconds: 10
        failureThreshold: 10
        timeoutSeconds: 10

postgresql:
  enabled: false

redis:
  enabled: false

rbac:
  create: true

keycloak:
  enabled: true
  realm: lifecycle
  url: localhost
  appUrl: localhost:5001

  adminUsername: admin
  adminPassword: admin
  defaultUserPassword: changeme

  postgresUsername: keycloakdb
  postgresPassword: keycloakdb

  lifecycleCoreClientSecret: changeme

  # Identity Provider configurations (disabled for local dev, enable as needed)
  companyIdp:
    enabled: true
    clientId: app-broker
    clientSecret: changeme
    tokenUrl: http://localhost:8080/realms/company/protocol/openid-connect/token
    authorizationUrl: http://localhost:8080/realms/company/protocol/openid-connect/auth
    userInfoUrl: http://localhost:8080/realms/company/protocol/openid-connect/userinfo
    jwksUrl: http://localhost:8080/realms/company/protocol/openid-connect/certs
    issuer: http://localhost:8080/realms/company

  githubIdp:
    enabled: true
    # clientId and clientSecret will be taken from secrets.githubClientId and secrets.githubClientSecret
    # clientId
    # clientSecret

  image:
    registry: quay.io
    repository: keycloak/keycloak
    tag: 26.3.4

  resources:
    requests:
      cpu: 400m
      memory: 512Mi
    limits:
      memory: 768Mi

  postgresImage:
    registry: ''
    repository: library/postgres
    tag: 16.3-alpine

  postgresResources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

  persistent: true
  volumeSize: 1Gi

  ingress:
    enabled: false
    className: nginx
    tls: false
