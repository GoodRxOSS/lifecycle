# Copyright 2025 GoodRx, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

global:
  image:
    repository: lifecycleoss/app
    tag: latest
    pullPolicy: IfNotPresent
  imagePullSecrets: []

  serviceAccount:
    create: true
    name: 'runtime-sa'

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false

  env:
    - name: JOB_VERSION
      value: default
    - name: ENVIRONMENT
      value: production
    - name: NODE_ENV
      value: production
    - name: APP_ENV
      value: production
    - name: PINO_PRETTY
      value: 'false'
    - name: PORT
      value: '80'
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: app-postgres
          key: DATABASE_URL
    - name: REDIS_URL
      valueFrom:
        secretKeyRef:
          name: app-redis
          key: REDIS_URL
  envFrom:
    - secretRef:
        name: app-secrets
    - configMapRef:
        name: app-config

components:
  web:
    enabled: true
    fullnameOverride: 'lifecycle-web'

    service:
      enabled: true
      type: ClusterIP
      port: 80
      targetPort: 80

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - host: app.<your_domain_here>
          paths: ['/']

    deployment:
      replicaCount: 1
      resources:
        requests:
          cpu: 200m
          memory: 200Mi
      extraEnv:
        - name: LIFECYCLE_MODE
          value: web
      ports:
        - name: http
          containerPort: 80
          protocol: TCP
      livenessProbe:
        httpGet:
          path: /api/health
          port: http
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 6
      readinessProbe:
        httpGet:
          path: /api/health
          port: http
        periodSeconds: 5
        failureThreshold: 3

  worker:
    enabled: true
    fullnameOverride: 'lifecycle-worker'

    service:
      enabled: false

    ingress:
      enabled: false

    deployment:
      replicaCount: 1
      resources:
        limits:
          cpu: 1000m
          memory: 4000Mi
        requests:
          cpu: 200m
          memory: 200Mi
      extraEnv:
        - name: LIFECYCLE_MODE
          value: job
        - name: STAGE
          value: prod
        - name: LOG_LEVEL
          value: info
        - name: AWS_REGION
          value: 'us-west-2'
        - name: MAX_GITHUB_API_REQUEST
          value: '33'
        - name: GITHUB_API_REQUEST_INTERVAL
          value: '10000'

      ports:
        - name: http
          containerPort: 80
          protocol: TCP
      livenessProbe:
        httpGet:
          path: /api/health
          port: http
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 12
        timeoutSeconds: 10
      readinessProbe:
        httpGet:
          path: /api/jobs
          port: http
        periodSeconds: 5
        failureThreshold: 3

postgresql:
  enabled: false

redis:
  enabled: false

rbac:
  create: true

secrets:
  enabled: true
